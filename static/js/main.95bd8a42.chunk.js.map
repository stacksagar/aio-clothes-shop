{"version":3,"sources":["firebase/firebase.utils.js","Redux/types.js","Redux/actions.js","Redux/selectors/cart.selectors.js","components/CartComponents/cart-item/CartItem.jsx","components/CartComponents/cart-dropdown/CartDropdown.jsx","components/CartComponents/cart-icon/CartIcon.jsx","Redux/selectors/user.selectors.js","components/HeaderComponents/Header.jsx","Redux/selectors/local.database.selector.js","components/Spinner/Spinner.style.js","components/Spinner/Spinner.component.jsx","components/ShopComponents/item-collection/ItemCollection.jsx","components/ShopComponents/shop-collection/Shop-collection.jsx","components/ShopComponents/shop-collection/Shop-collection-container.jsx","components/ShopComponents/preview-component/PreviewComponent.jsx","components/ShopComponents/shop-collections/Shop-collections.jsx","components/ShopComponents/shop-collections/Shop-collections-container.jsx","components/ShopComponents/shop-collections/ShopRouteComponent.jsx","components/Signin-Signup/Signin.jsx","components/Signin-Signup/Signup.jsx","components/DirectoryComponents/menu-item/MenuItem.jsx","components/DirectoryComponents/directory/Directory.jsx","Homepage.jsx","Stripe/StripeButton.jsx","components/CartComponents/checkout/CheckoutItem.jsx","components/CartComponents/checkout/Checkout.jsx","App.js","Redux/reducers/user.reducer.js","Redux/utilities/cart.utils.js","Redux/reducers/cart.reducer.js","Redux/reducers/local.database.js","Redux/root-reducer.js","Redux/local.sagas.js","Redux/root.sagas.js","Redux/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","createUserProfileDocument","authUser","additionalData","a","userRef","doc","uid","get","exists","displayName","email","createAt","Date","set","console","log","message","convertCollectionSnapshotToMap","collectionSnapshot","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","acc","collection","actionTypes","TOGGLE_CART_HIDDEN","SET_ANIMATION","ADD_CART_ITEM","REMOVE_CART_ITEM","CLEAR_ITEM","ALL_CART_CLEAR","SET_COLLECTIONS","CHECK_USER_SESSION","FETCH_COLLECTION_START","FETCH_COLLECTION_SUCCESS","FETCH_COLLECTION_FAILURE","GOOGLE_SIGNIN_START","EMAIL_SIGNIN_START","SIGNIN_SUCCESS","SIGNIN_FAILURE","SIGN_OUT_START","SIGN_OUT_FAILURE","SIGN_OUT_SUCCESS","SIGN_UP_START","SIGN_UP_FAILURE","SIGN_UP_SUCCESS","type","addCartItem","item","payload","removeCartItem","clearCartItem","clearAllCart","signinSuccess","user","signinFailure","error","signupSuccess","selectCart","state","cart","selectCartItems","createSelector","cartItems","selectCartItemsCount","quantity","selectTotalPrice","price","selectCartAnimation","animation","selectCartHidden","hidden","connect","dispatch","addItem","removeItem","clearItem","name","imageUrl","className","src","alt","onClick","mapStateToProps","createStructuredSelector","withRouter","clearAll","toggleCart","history","length","push","cartItemsCount","toggleHidden","selectCurrentUser","currentUser","signOutStart","props","to","selectLocalDatabase","localDatabase","selectCategories","categories","selectCollections","collections","selectCollectionsAndMakeArray","collectionsObject","Object","keys","key","selectIsCollectionFetching","localDB","isFetching","selectIsCollectionIsLoaded","SpinnerOverlay","styled","div","SpinnerContainer","WithSpinner","WrappedComponent","isLoading","otherProps","setAnimation","bool","setTimeout","paramUrl","match","params","category","ShopCollectionContainer","ShopCollection","PreviewComponent","ShopCollectionsContainer","ShopCollections","fetchCollectionsStart","React","useEffect","exact","path","component","Signin","password","emailFocus","passwordFocus","onChangeHandler","e","target","value","setState","submitHandler","preventDefault","emailSigninStart","this","googleSigninStart","onSubmit","htmlFor","onChange","onFocus","onBlur","Component","Signup","signup","confirmPassword","displayNameFocus","confirmPasswordFocus","alert","signupStart","val","section","size","linkUrl","index","Homepage","StripeButton","stripePrice","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","stripeKey","totalPrice","checkUserSession","ShopComponent","Checkout","render","Redirect","INITIAL_STATE","userReducer","action","addToCartItem","allItems","singleItem","some","removeToCartItem","existingItem","find","filter","cartReducer","errorMessage","localDatabaseReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","fetchCollectionsAsync","userSigninSnapshot","signinWithGoogle","onGoogleSigninStart","signinWithEmail","onEmailSigninStart","isAuthenticatated","onCheckUserSession","signOut","onSignOut","clearCartSignout","onClearCart","signUp","onSignUp","signinAfterSignup","onSignupSuccess","userSagas","collectionRef","snapshot","call","collectionsMap","put","takeLatest","userSnapshot","signInWithPopup","signInWithEmailAndPassword","Promise","resole","reject","unsubscribe","onAuthStateChanged","createUserWithEmailAndPassword","all","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","persistor","persistStore","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.95bd8a42.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyBzZUNAyAA97f3be5RpKpCStRrZFlYyMjQ',\r\n  authDomain: 'aio-clothes-shop.firebaseapp.com',\r\n  projectId: 'aio-clothes-shop',\r\n  storageBucket: 'aio-clothes-shop.appspot.com',\r\n  messagingSenderId: '274937086542',\r\n  appId: '1:274937086542:web:6e8b56bd4774a9a5e9791f',\r\n  measurementId: 'G-B6SDVTN1ZG',\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport const createUserProfileDocument = async (authUser, additionalData) => {\r\n  if (!authUser) return;\r\n\r\n  const userRef = firestore.doc(`users/${authUser.uid}`);\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    try {\r\n      const { displayName, email } = authUser;\r\n      const createAt = new Date();\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createAt,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.log('error ', error.message);\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n};\r\n\r\nexport const addCollectionAndDocuments = async (\r\n  collectionKey,\r\n  objectsToAdd\r\n) => {\r\n  const collectionRef = firestore.collection(collectionKey);\r\n  objectsToAdd.forEach((obj) => {\r\n    const newDocRef = collectionRef.doc();\r\n    newDocRef.set(obj);\r\n  });\r\n};\r\n\r\nexport const convertCollectionSnapshotToMap = (collectionSnapshot) => {\r\n  const getCollections = collectionSnapshot.docs.map((doc) => {\r\n    const { title, items } = doc.data();\r\n    return {\r\n      routeName: encodeURI(title.toLowerCase()),\r\n      id: doc.id,\r\n      title,\r\n      items,\r\n    };\r\n  });\r\n\r\n  return getCollections.reduce((acc, collection) => {\r\n    acc[collection.title.toLowerCase()] = collection;\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n\r\n  return new Promise((resole, reject) => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      unsubscribe();\r\n      resole(user);\r\n    }, reject);\r\n  });\r\n  \r\n};\r\n\r\nexport default firebase;\r\n","const actionTypes = {\r\n  TOGGLE_CART_HIDDEN: 'TOGGLE_CART_HIDDEN',\r\n  SET_ANIMATION: 'SET_ANIMATION',\r\n  ADD_CART_ITEM: 'ADD_CART_ITEM',\r\n  REMOVE_CART_ITEM: 'REMOVE_CART_ITEM',\r\n  CLEAR_ITEM: 'CLEAR_ITEM',\r\n  ALL_CART_CLEAR: 'ALL_CART_CLEAR',\r\n  SET_COLLECTIONS: 'SET_COLLECTIONS',\r\n  CHECK_USER_SESSION: 'CHECK_USER_SESSION',\r\n\r\n  FETCH_COLLECTION_START: 'FETCH_COLLECTION_START',\r\n  FETCH_COLLECTION_SUCCESS: 'FETCH_COLLECTION_SUCCESS',\r\n  FETCH_COLLECTION_FAILURE: 'FETCH_COLLECTION_FAILURE',\r\n\r\n  GOOGLE_SIGNIN_START: 'GOOGLE_SIGNIN_START',\r\n  EMAIL_SIGNIN_START: 'EMAIL_SIGNIN_START',\r\n  SIGNIN_SUCCESS: 'SIGNIN_SUCCESS',\r\n  SIGNIN_FAILURE: 'SIGNIN_FAILURE',\r\n\r\n  SIGN_OUT_START: 'SIGN_OUT_START',\r\n  SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\r\n  SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\r\n\r\n  SIGN_UP_START: 'SIGN_UP_START',\r\n  SIGN_UP_FAILURE: 'SIGN_UP_FAILURE',\r\n  SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\r\n};\r\n\r\nexport default actionTypes;","import {} from '../firebase/firebase.utils';\r\nimport actionTypes from './types';\r\n\r\nexport const SET_CURRENT_USER = (user) => ({\r\n  type: actionTypes.SET_CURRENT_USER,\r\n  payload: user,\r\n});\r\n\r\nexport const TOGGLE_CART_HIDDEN = () => ({\r\n  type: actionTypes.TOGGLE_CART_HIDDEN,\r\n});\r\n\r\nexport const addCartItem = (item) => ({\r\n  type: actionTypes.ADD_CART_ITEM,\r\n  payload: item,\r\n});\r\n\r\nexport const removeCartItem = (item) => ({\r\n  type: actionTypes.REMOVE_CART_ITEM,\r\n  payload: item,\r\n});\r\n\r\nexport const setAnimation = (bool) => ({\r\n  type: actionTypes.SET_ANIMATION,\r\n  payload: bool,\r\n});\r\n\r\nexport const clearCartItem = (id) => ({\r\n  type: actionTypes.CLEAR_ITEM,\r\n  payload: id,\r\n});\r\n\r\nexport const clearAllCart = () => ({\r\n  type: actionTypes.ALL_CART_CLEAR,\r\n});\r\n\r\nexport const setCollections = (collections) => ({\r\n  type: actionTypes.SET_COLLECTIONS,\r\n  payload: collections,\r\n});\r\n\r\nexport const checkUserSession = (get) => ({\r\n  type: actionTypes.CHECK_USER_SESSION,\r\n});\r\n\r\n// * fething data from server\r\nexport const fetchCollectionsStart = () => ({\r\n  type: actionTypes.FETCH_COLLECTION_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collection) => ({\r\n  type: actionTypes.FETCH_COLLECTION_SUCCESS,\r\n  payload: collection,\r\n});\r\n\r\nexport const fetchCollectionsFailure = (errorMessage) => ({\r\n  type: actionTypes.FETCH_COLLECTION_FAILURE,\r\n  payload: errorMessage,\r\n});\r\n\r\n/* TODO GOOGLE AND EMAIL SIGNIN */\r\n\r\nexport const googleSigninStart = () => ({\r\n  type: actionTypes.GOOGLE_SIGNIN_START,\r\n});\r\n\r\nexport const emailSigninStart = (emailAndPassword) => ({\r\n  type: actionTypes.EMAIL_SIGNIN_START,\r\n  payload: emailAndPassword,\r\n});\r\n\r\nexport const signinSuccess = (user) => ({\r\n  type: actionTypes.SIGNIN_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nexport const signinFailure = (error) => ({\r\n  type: actionTypes.SIGNIN_FAILURE,\r\n  payload: error,\r\n});\r\n\r\n// Signout Actions\r\nexport const signoutStart = () => ({\r\n  type: actionTypes.SIGN_OUT_START,\r\n});\r\nexport const signoutFailure = () => ({\r\n  type: actionTypes.SIGN_OUT_FAILURE,\r\n});\r\nexport const signoutSuccess = () => ({\r\n  type: actionTypes.SIGN_OUT_SUCCESS,\r\n});\r\n\r\n// SIGNUP USER\r\nexport const signupStart = (userCreadentials) => ({\r\n  type: actionTypes.SIGN_UP_START,\r\n  payload: userCreadentials,\r\n});\r\n\r\nexport const signupSuccess = ({ user, additionalData }) => ({\r\n  type: actionTypes.SIGN_UP_SUCCESS,\r\n  payload: { user, additionalData },\r\n});\r\n\r\nexport const signupFailure = (error) => ({\r\n  type: actionTypes.SIGN_UP_FAILURE,\r\n  payload: error,\r\n});\r\n","import { createSelector } from 'reselect';\n\nconst selectCart = (state) => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  (cart) => cart.cartItems\n);\n\nexport const selectCartItemsCount = createSelector(selectCartItems, (cart) =>\n  cart.reduce((acc, item) => acc + item.quantity, 0)\n);\n\nexport const selectTotalPrice = createSelector(selectCartItems, (items) =>\n  items.reduce((acc, item) => acc + item.quantity * item.price, 0)\n);\n\nexport const selectCartAnimation = createSelector(\n  [selectCart],\n  (cart) => cart.animation\n);\n\nexport const selectCartHidden = createSelector(\n  [selectCart],\n  (cart) => cart.hidden\n);\n","import React from 'react';\nimport './CartItem.scss';\nimport { connect } from 'react-redux'\nimport { addCartItem, clearCartItem, removeCartItem} from '../../../Redux/actions'\n\nconst CartItem = ({item, addItem, removeItem, clearItem}) => {\n  const { name, price, quantity, imageUrl, id } = item;\n  return (\n    <div className=\"CartItem\">\n      \n      <div className=\"cartContainer\">\n        <img className=\"cartImage\" src={imageUrl} alt=\"\" />\n        <div className=\"cartInfo\">\n          <p className=\"cartPrice\">Price: ${price}</p>\n          <div className=\"cartQuantity\">\n            <button onClick={()=>removeItem(item)} className=\"focus:ring-2\">-</button>\n            <span className=\"quantity\">{quantity}</span>\n            <button onClick={()=>addItem(item)} className=\"focus:ring-2\">+</button>\n          </div>\n          <button onClick={()=>clearItem(id)} className=\"cartRemove focus:ring-2\">Remove</button>\n        </div>\n      </div>\n\n      <div className=\"itemName truncate overflow-ellipsis\">\n      <b>{name}</b>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addCartItem(item)),\n  removeItem: item => dispatch(removeCartItem(item)),\n  clearItem: id => dispatch(clearCartItem(id))\n})\n\nexport default connect(null, mapDispatchToProps)(CartItem);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { createStructuredSelector } from 'reselect';\nimport { clearAllCart, TOGGLE_CART_HIDDEN } from '../../../Redux/actions';\nimport {\n  selectCartHidden,\n  selectCartItems,\n} from '../../../Redux/selectors/cart.selectors';\nimport CartItem from '../cart-item/CartItem';\nimport './CartDropdown.scss';\n\nconst CartDropdown = ({ hidden, cartItems, history, clearAll, toggleCart }) => {\n  return (\n    <div className={`CartDropdown ${hidden && 'hiddenCart'}`}>\n      <div className=\"cartDropdown-container\">\n        {cartItems.length ? (\n          cartItems.map((item) => <CartItem key={item.id} item={item} />)\n        ) : (\n          <p className=\"text-red-500 font-semibold text-center\">\n            Your cart is empty!\n          </p>\n        )}\n      </div>\n\n      <div className=\"cart-buttons\">\n        <button\n          onClick={() => {\n            toggleCart();\n            history.push('/checkout');\n          }}\n          className=\"checkoutBtn focus:border-transparent focus:outline-none focus:ring-4 text-white  px-7 py-2 rounded\"\n        >\n          {' '}\n          CHECKOUT{' '}\n        </button>\n\n        <button\n          onClick={() => {\n            toggleCart();\n            clearAll();\n          }}\n          className=\"clearAll focus:border-transparent focus:outline-none focus:ring-4 text-white bg-red-600 px-7 py-2 rounded\"\n        >\n          {' '}\n          Clear ALL{' '}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  hidden: selectCartHidden,\n  cartItems: selectCartItems,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearAll: () => dispatch(clearAllCart()),\n  toggleCart: () => dispatch(TOGGLE_CART_HIDDEN()),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(CartDropdown)\n);\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { TOGGLE_CART_HIDDEN } from '../../../Redux/actions';\r\nimport { selectCartAnimation, selectCartItems,  selectCartItemsCount } from '../../../Redux/selectors/cart.selectors';\r\nimport './CartIcon.scss';\r\nconst CartIcon = ({ toggleHidden, cartItemsCount, animation }) => {\r\n  \r\n  return (\r\n    <div className=\"CartIcon\" onClick={toggleHidden}>\r\n      <h1 className=\"cart-bag\">👜</h1>\r\n      <span className={`cart-count ${animation && 'cartCountAnim'}`}>\r\n        {cartItemsCount}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector ({\r\n    cartItems: selectCartItems, \r\n  cartItemsCount: selectCartItemsCount,\r\n    animation: selectCartAnimation\r\n  });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleHidden: () => dispatch(TOGGLE_CART_HIDDEN()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);","import { createSelector } from 'reselect'\n\nconst selectUser = state => state.user\n\nexport const selectCurrentUser = createSelector(\n [selectUser],\n (user) => user.currentUser\n)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nimport { signoutStart } from '../../Redux/actions'; \r\nimport CartDropdown from '../CartComponents/cart-dropdown/CartDropdown';\r\nimport CartIcon from '../CartComponents/cart-icon/CartIcon';\r\nimport { selectCartAnimation } from '../../Redux/selectors/cart.selectors';\r\nimport { selectCurrentUser } from '../../Redux/selectors/user.selectors';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nconst Header = (props) => {\r\n  const {  currentUser, animation, signOutStart } = props; \r\n\r\n  return (\r\n    <menu className=\"Header\">\r\n      <div className=\"HeaderContainer\">\r\n        <Link to=\"/\" className=\"logo\">\r\n          <img className=\"w-10\" src=\"https://i.ibb.co/4Fdn4zg/eBrand2.png\" alt=\"\" />\r\n        </Link>\r\n        <nav className=\"options flex justify-between items-center\">\r\n          <Link to=\"/shop\" className=\"option\"> SHOP </Link>\r\n          {currentUser ? (\r\n            <div className=\"flex flex-col justify-center items-center relative\">\r\n              <span className=\"absolute text-white text-xs -top-3 left-2 m-auto\">\r\n                <small>{currentUser.displayName || 'John'}</small>\r\n              </span>\r\n              <Link to=\"/signin\" className=\"m-0 option\" onClick={signOutStart}>\r\n                Signout\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <Link className=\"option\" to=\"/signup\"> Signup </Link>\r\n              <Link to=\"/signin\" className=\"option\"> Signin </Link>\r\n            </>\r\n          )}\r\n\r\n          <span className={`added ${animation && 'ani'}`}>Added</span>\r\n\r\n          <CartIcon />\r\n        </nav>\r\n\r\n        <CartDropdown />\r\n      </div>\r\n    </menu>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector ({\r\n    currentUser: selectCurrentUser,\r\n    animation: selectCartAnimation,\r\n  })\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOutStart: () => dispatch(signoutStart())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectLocalDatabase = (state) => state.localDatabase;\r\n\r\nexport const selectCategories = createSelector(\r\n  selectLocalDatabase,\r\n  (localDatabase) => localDatabase.categories\r\n);\r\n\r\nexport const selectCollections = createSelector(\r\n  selectLocalDatabase,\r\n  (localDatabase) => localDatabase.collections\r\n);\r\n\r\nexport const selectCollectionsAndMakeArray = createSelector(\r\n  selectCollections,\r\n  (collectionsObject) =>\r\n    collectionsObject\r\n      ? Object.keys(collectionsObject).map((key) => collectionsObject[key])\r\n      : []\r\n);\r\n\r\nexport const SelectCollection = (paramUrl) =>\r\n  createSelector(selectCollections, (collections) =>\r\n    collections ? collections[paramUrl] : null\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  selectLocalDatabase,\r\n  (localDB) => localDB.isFetching\r\n);\r\n\r\nexport const selectIsCollectionIsLoaded = createSelector(\r\n  selectLocalDatabase,\r\n  (localDB) => !!localDB.collections\r\n);","import styled from 'styled-components';\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n  height: calc(100vh - 55px);\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 70px;\r\n  height:70px;\r\n  border: 5px solid transparent;\r\n  border-radius: 50%;\r\n  border-left-color: blueviolet; \r\n  border-top-color: blueviolet; \r\n  border-right-color: blueviolet;\r\n  animation: spin .8s ease-in-out infinite;\r\n  -webkit-animation: spin .8s ease-in-out infinite;\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport { SpinnerContainer, SpinnerOverlay } from './Spinner.style';\r\n\r\nconst WithSpinner = (WrappedComponent) => {\r\n  const Spinner = ({ isLoading, ...otherProps }) => {\r\n    return isLoading ? (\r\n      <SpinnerOverlay>\r\n        <SpinnerContainer />\r\n      </SpinnerOverlay>\r\n    ) : (\r\n      <WrappedComponent {...otherProps} />\r\n    );\r\n  };\r\n\r\n  return Spinner;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { addCartItem, setAnimation } from '../../../Redux/actions';\nimport { selectCartAnimation, selectCartItems,} from '../../../Redux/selectors/cart.selectors';\nimport './itemCollectin.css';\n\nconst ItemCollection = ({ item, addItem, animation, setAnimation }) => {\n\n  const { name, price, imageUrl } = item;\n  const cartBtnAction = () => {\n    addItem(item);\n    setAnimation(!animation);\n    setTimeout(() => {\n      setAnimation(!animation);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"ItemCollection\">\n      <img src={imageUrl} alt=\"product\" />\n      <div>\n        <p>{name}</p>\n        <span>${price}</span>\n      </div>\n      <button\n        onClick={cartBtnAction}\n        className=\"cartBtn focus:ring-4 focus:border-transparent focus:outline-none\">\n        Add TO Cart\n      </button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addCartItem(item)),\n  setAnimation: (bool) => dispatch(setAnimation(bool)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  cart: selectCartItems,\n  animation: selectCartAnimation,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemCollection);\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { SelectCollection } from '../../../Redux/selectors/local.database.selector';\r\nimport ItemCollection from '../item-collection/ItemCollection';\r\nimport './Shop-collection.scss';\r\n\r\nconst ShopCollection = ({ collection }) => {\r\n  const { title, items } = collection;\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-4xl p-3\">{title}</h1>\r\n      <div className=\"shop_collection\">\r\n        {items\r\n          .map((item) => (\r\n            <ItemCollection key={item.id} item={item} />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  collection: SelectCollection(props.match.params.category)(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ShopCollection);","import { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { selectIsCollectionIsLoaded } from '../../../Redux/selectors/local.database.selector' \r\nimport WithSpinner from '../../Spinner/Spinner.component'\r\nimport ShopCollection from './Shop-collection'\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n isLoading: state => !selectIsCollectionIsLoaded(state)\r\n})\r\n\r\nconst ShopCollectionContainer = connect(mapStateToProps)(WithSpinner(ShopCollection))\r\nexport default ShopCollectionContainer","import React from 'react';\nimport ItemCollection from '../item-collection/ItemCollection';\nimport './previewComponent.css';\n\nconst PreviewComponent = ({ title, items }) => {\n  return (\n    <div className=\"PreviewColletion bg-gray-100 mb-10\">\n\n      <h1 className=\"text-5xl text-yellow-800\">{title}</h1>\n      <div className=\"PreviewColletionContainer\">\n        \n        {items\n          // .filter((_, i) => i < 9)\n          .map((item) => (\n            <ItemCollection key={item.id} item={item} />\n          ))}\n        \n      </div>\n\n    </div>\n  );\n};\n\nexport default PreviewComponent;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { selectCollectionsAndMakeArray } from '../../../Redux/selectors/local.database.selector';\r\nimport PreviewComponent from '../preview-component/PreviewComponent';\r\nimport './Shop-collections.css';\r\n\r\nconst ShopCollections = ({ collections }) => (\r\n  <div className=\"ShopComponent\">\r\n    {collections.map(({ id, ...collections }) => (\r\n      <PreviewComponent key={id} {...collections} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  collections: selectCollectionsAndMakeArray,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ShopCollections);","import { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\nimport { selectIsCollectionFetching } from '../../../Redux/selectors/local.database.selector'\r\nimport WithSpinner from '../../Spinner/Spinner.component'\r\nimport ShopCollections from './Shop-collections'\r\n\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n isLoading: selectIsCollectionFetching\r\n})\r\n\r\nconst ShopCollectionsContainer = connect(mapStateToProps)(WithSpinner(ShopCollections))\r\nexport default ShopCollectionsContainer","import React from 'react';\r\nimport { Route } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCollectionsStart } from '../../../Redux/actions';\r\n\r\nimport ShopCollectionContainer from '../shop-collection/Shop-collection-container';\r\nimport ShopCollectionsContainer from './Shop-collections-container';\r\n\r\nconst ShopComponent = ({ match, fetchCollectionsStart }) => {\r\n  React.useEffect(() => {\r\n    fetchCollectionsStart();\r\n  }, [fetchCollectionsStart]);\r\n\r\n  return (\r\n    <div>\r\n      <Route\r\n        exact\r\n        path={`${match.path}`}\r\n        component={ShopCollectionsContainer}\r\n      />\r\n      <Route\r\n        exact\r\n        path={`${match.path}/:category`}\r\n        component={ShopCollectionContainer}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopComponent);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { emailSigninStart, googleSigninStart } from '../../Redux/actions';\r\nimport './Signin.scss';\r\n\r\nclass Signin extends React.Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    emailFocus: false,\r\n    passwordFocus: false,\r\n  };\r\n\r\n  onChangeHandler = (e) => {\r\n    const { id, value } = e.target;\r\n    this.setState({ [id]: value });\r\n  };\r\n\r\n  submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    const { emailSigninStart } = this.props;\r\n\r\n    emailSigninStart(email, password);\r\n  };\r\n\r\n  render() {\r\n    const { email, password, emailFocus, passwordFocus } = this.state;\r\n    const { googleSigninStart } = this.props;\r\n    return (\r\n      <div className=\"Signin\">\r\n        <form onSubmit={this.submitHandler} className=\"signin-container\">\r\n          <h2>Sign in</h2>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\" className={`${emailFocus ? 'focus' : ''}`}>\r\n              Email\r\n            </label>\r\n            <input\r\n              onChange={this.onChangeHandler}\r\n              onFocus={() => this.setState({ emailFocus: true })}\r\n              onBlur={() => !email && this.setState({ emailFocus: false })}\r\n              type=\"email\"\r\n              value={email}\r\n              id=\"email\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label\r\n              htmlFor=\"password\"\r\n              className={`${passwordFocus ? 'focus' : ''}`}\r\n            >\r\n              Password\r\n            </label>\r\n            <input\r\n              onChange={this.onChangeHandler}\r\n              onFocus={() => this.setState({ passwordFocus: true })}\r\n              onBlur={() =>\r\n                !password && this.setState({ passwordFocus: false })\r\n              }\r\n              type=\"password\"\r\n              value={password}\r\n              id=\"password\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"button-group\">\r\n            <button type=\"submit\">Sign In</button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"googleSignin\"\r\n              onClick={googleSigninStart}\r\n            >\r\n              Signin With Google\r\n            </button>\r\n          </div>\r\n\r\n          <p className=\"signin-bottom\">\r\n            you don't have an account! <Link to=\"/signup\">create one</Link>{' '}\r\n          </p>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  googleSigninStart: () => dispatch(googleSigninStart()),\r\n  emailSigninStart: (email, password) =>\r\n    dispatch(emailSigninStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(Signin));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { signupStart } from '../../Redux/actions';\r\nimport './Signup.scss';\r\n\r\nclass Signup extends React.Component {\r\n  state = {\r\n    signup: {\r\n      displayName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n    },\r\n    displayNameFocus: false,\r\n    emailFocus: false,\r\n    passwordFocus: false,\r\n    confirmPasswordFocus: false,\r\n  };\r\n\r\n  onChangeHandler = (e) => {\r\n    const { signup } = this.state;\r\n    const { id, value } = e.target;\r\n    this.setState({ signup: { ...signup, [id]: value } });\r\n  };\r\n\r\n  submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    const { displayName, email, password, confirmPassword } = this.state.signup;\r\n    if (password !== confirmPassword) {\r\n      alert(\"password does't match!\");\r\n      return;\r\n    }\r\n    \r\n    this.props.signupStart({ email, password, displayName });\r\n    \r\n    // try {\r\n    //   const { user } = await auth.createUserWithEmailAndPassword(\r\n    //     email,\r\n    //     password\r\n    //   );\r\n    //   await createUserProfileDocument(user, { displayName });\r\n    //   this.setState({\r\n    //     signup: {\r\n    //       displayName: '',\r\n    //       email: '',\r\n    //       password: '',\r\n    //       confirmPassword: '',\r\n    //     },\r\n    //   });\r\n    //   this.props.history.push('/shop');\r\n    // } catch (e) {\r\n    //   alert(e.message);\r\n    // }\r\n\r\n\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      displayNameFocus,\r\n      confirmPasswordFocus,\r\n      emailFocus,\r\n      passwordFocus,\r\n    } = this.state;\r\n    const { displayName, email, password, confirmPassword } = this.state.signup;\r\n    return (\r\n      <div className=\"Signup\">\r\n        <form onSubmit={this.submitHandler} className=\"signup-container\">\r\n          <h2>Sign Up</h2>\r\n\r\n          <div className=\"form-group\">\r\n            <label\r\n              htmlFor=\"displayName\"\r\n              className={`${displayNameFocus ? 'focus' : ''}`}\r\n            >\r\n              Your Name\r\n            </label>\r\n            <input\r\n              onChange={this.onChangeHandler}\r\n              onFocus={() => this.setState({ displayNameFocus: true })}\r\n              onBlur={() =>\r\n                !displayName && this.setState({ displayNameFocus: false })\r\n              }\r\n              type=\"displayName\"\r\n              value={displayName}\r\n              id=\"displayName\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\" className={`${emailFocus ? 'focus' : ''}`}>\r\n              Email\r\n            </label>\r\n            <input\r\n              onChange={this.onChangeHandler}\r\n              onFocus={() => this.setState({ emailFocus: true })}\r\n              onBlur={() => !email && this.setState({ emailFocus: false })}\r\n              type=\"email\"\r\n              value={email}\r\n              id=\"email\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label\r\n              htmlFor=\"password\"\r\n              className={`${passwordFocus ? 'focus' : ''}`}\r\n            >\r\n              Password\r\n            </label>\r\n            <input\r\n              onChange={this.onChangeHandler}\r\n              onFocus={() => this.setState({ passwordFocus: true })}\r\n              onBlur={() =>\r\n                !password && this.setState({ passwordFocus: false })\r\n              }\r\n              type=\"password\"\r\n              value={password}\r\n              id=\"password\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label\r\n              htmlFor=\"confirmPassword\"\r\n              className={`${confirmPasswordFocus ? 'focus' : ''}`}\r\n            >\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              onChange={this.onChangeHandler}\r\n              onFocus={() => this.setState({ confirmPasswordFocus: true })}\r\n              onBlur={() =>\r\n                !confirmPassword &&\r\n                this.setState({ confirmPasswordFocus: false })\r\n              }\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              id=\"confirmPassword\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"button-group\">\r\n            <button type=\"submit\">Sign UP</button>\r\n          </div>\r\n\r\n          <p className=\"signin-bottom\">\r\n            If you have already an account\r\n            <Link to=\"/signin\"> signin here.</Link>{' '}\r\n          </p>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signupStart: (val) => dispatch(signupStart(val)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(withRouter(Signup));\r\n","import React from 'react';\nimport './menuItem.css';\nimport { withRouter } from 'react-router-dom';\n\nconst MenuItem = ({ section, history }) => { \n  const { size, imageUrl, title, linkUrl } = section; \n  return (\n    <div\n      onClick={() => history.push(linkUrl)}\n      className={`Menu-item ${size}`}\n    >\n    <img className=\"backgroundImage\" src={ imageUrl} alt=\"Image_Loading...\"/>\n      <div className=\"content\">\n        <h1 className=\"title\">{title}</h1>\n        <h5 className=\"subTitle\">SHOP NOW</h5>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(MenuItem)\n ","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCategories } from '../../../Redux/selectors/local.database.selector';\nimport MenuItem from '../menu-item/MenuItem';\nimport './directory.css';\n\nconst Directory = ({ categories }) => (\n  <div className=\"Directory\">\n    {categories.map((category, index) => (\n      <MenuItem key={index} section={category} />\n    ))}\n  </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  categories: selectCategories,\n});\n\nexport default connect(mapStateToProps)(Directory);\n","import React from 'react';\r\nimport Directory from './components/DirectoryComponents/directory/Directory';\r\n//\r\nconst Homepage = (a) => {\r\n  return <Directory />;\r\n};\r\nexport default Homepage;","import React from 'react'\n\nimport StripeCheckout from 'react-stripe-checkout'\n\nconst StripeButton = ({price}) => {\n \n const stripePrice = price * 100\n const publishabledKey = 'pk_test_51IpyLrSJnYdVoPUj9su6SDnxU0vqjF1LLrX4Eh8zIsBv3ECIie93Vki9sA4im7iQtB1kUrlr9RxtzH1MgttzqmmP00UC9OlMDk'\n\n const onToken = token => {\n  alert(\"Peyment Successfull!\")\n }\n\n return (\n  <StripeCheckout\n   label=\"Pay Now\"\n   name=\"AIO Clothes Ltd.\"\n   billingAddress\n   shippingAddress\n   image=\"https://svgshare.com/i/CUz.svg\"\n   description={`Your total is $${price}`}\n   amount={stripePrice}\n   panelLabel=\"Pay Now\"\n   token={onToken}\n   stripeKey={publishabledKey}\n   \n  />\n )\n}\n\nexport default StripeButton","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addCartItem, removeCartItem, clearCartItem } from '../../../Redux/actions';\n\nconst CheckoutItem = ({ item, addItem, removeItem, clearItem }) => {\n  const { name, price, imageUrl, quantity, id } = item;\n  return (\n    <div className=\"checkout-product\">\n      <img src={imageUrl} alt=\"product\" />\n      <span className=\"p-name\">{name}</span>\n      <div className=\"p-quantity\">\n        <button \n        onClick={() => removeItem(item)} className=\"focus:border-transparent focus:outline-none focus:ring-2\">\n          {' '}\n          -{' '}\n        </button>\n        <span>{quantity}</span>\n        <button\n          onClick={() => addItem(item)}\n          className=\"focus:border-transparent focus:outline-none focus:ring-2\"\n        >\n          {' '}\n          +{' '}\n        </button>\n      </div>\n      <span className=\"p-price\">${price}</span>\n      <button onClick={()=>clearItem(id)} className=\"bg-red-500 focus:outline-none focus:border-transparent focus:ring-4 rounded px-3 pb-2 pt-1 text-white\"\n      >\n        Remove\n      </button>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addCartItem(item)),\n  removeItem: (item) => dispatch(removeCartItem(item)),\n  clearItem: (id) => dispatch(clearCartItem(id)),\n});\n \n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { clearAllCart } from '../../../Redux/actions';\nimport {\n  selectCartItems,\n  selectTotalPrice,\n} from '../../../Redux/selectors/cart.selectors';\nimport StripeButton from '../../../Stripe/StripeButton';\nimport './Checkout.scss';\nimport CheckoutItem from './CheckoutItem';\n\nconst Checkout = ({ cartItems, totalPrice, clearAll}) => {\n  return (\n    <div className=\"Checkout\">\n      <div className=\"checkout-header\">\n        <div>\n          <span>Product</span>\n          <span>Description</span>\n          <span>Quantity</span>\n          <span>Price</span>\n          <span>Remove</span>\n        </div>\n      </div>\n\n      <div className=\"checkout-products\">\n        {cartItems.length ? (\n          <>\n            {cartItems.map((item) => (\n              <CheckoutItem key={item.id} item={item} />\n            ))}\n\n            <div className=\"checkout-footer\">\n              <StripeButton price={totalPrice} />\n\n              <p className=\"totalPrice ml-5\">TOTAL PRICE: $<b>{totalPrice}</b></p>\n              \n              <button onClick={clearAll} className=\"clearAll focus:border-transparent focus:outline-none focus:ring-4 text-white bg-red-600 px-7 py-2 rounded\"> Clear ALL </button>\n            </div>\n            \n          </>\n        ) : (\n          <h1 className=\"p-3 text-3xl text-red-700 text-center\">\n            Your cart is empty!\n          </h1>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  totalPrice: selectTotalPrice,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearAll: () => dispatch(clearAllCart())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\n","import { Switch, Route, Redirect } from 'react-router-dom';\r\nimport React from 'react';\r\nimport Header from './components/HeaderComponents/Header';\r\nimport ShopComponent from './components/ShopComponents/shop-collections/ShopRouteComponent';\r\nimport Signin from './components/Signin-Signup/Signin.jsx';\r\nimport Signup from './components/Signin-Signup/Signup.jsx';\r\nimport Homepage from './Homepage';\r\nimport {} from './firebase/firebase.utils';\r\nimport { connect } from 'react-redux';\r\nimport { checkUserSession } from './Redux/actions';\r\nimport { selectCurrentUser } from './Redux/selectors/user.selectors';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport Checkout from './components/CartComponents/checkout/Checkout';\r\n\r\nconst App = ({ currentUser, checkUserSession }) => {\r\n\r\n  React.useEffect(() => {\r\n    checkUserSession();\r\n  }, [checkUserSession]);\r\n\r\n  // React.useEffect(() => {\r\n  //   let unsubscribe;\r\n  //   const getUser = async () => {\r\n  //     unsubscribe = await auth.onAuthStateChanged((user) => {\r\n  //       if (user) {\r\n  //         const userRef = createUserProfileDocument(user);\r\n  //         userRef\r\n  //           .then((ref) => ref.get())\r\n  //           .then((getData) => {\r\n  //             setCurrentUser({ id: getData.id, ...getData.data() });\r\n  //           });\r\n  //       }\r\n  //     });\r\n  //   };\r\n  //   getUser();\r\n  //   return function cleanup() {\r\n  //     unsubscribe();\r\n  //   };\r\n  // }, [setCurrentUser]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Homepage} />\r\n        <Route path=\"/shop\" component={ShopComponent} />\r\n        <Route path=\"/checkout\" component={Checkout} />\r\n        <Route\r\n          path=\"/signin\"\r\n          render={() => currentUser ? Redirect('/shop') :  <Signin />}\r\n        />\r\n        <Route\r\n          path=\"/signup\"\r\n          render={() => currentUser ? Redirect('/shop') : <Signup />}\r\n        />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkUserSession: () => dispatch(checkUserSession()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import actionTypes from '../types';\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: null,\r\n  error: null,\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SIGNIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n        error: null,\r\n      };\r\n\r\n    case actionTypes.SIGN_OUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentUser: null,\r\n        error: null,\r\n      };\r\n\r\n    case actionTypes.SIGNIN_FAILURE:\r\n    case actionTypes.SIGN_OUT_FAILURE:\r\n    case actionTypes.SIGN_UP_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","export const addToCartItem = (allItems, singleItem) => {\n  const isExisting = allItems.some((item) => item.id === singleItem.id);\n\n  if (isExisting) {\n    return allItems.map((item) =>\n      item.id === singleItem.id\n        ? { ...item, quantity: item.quantity + 1 }\n        : item\n    );\n  }\n\n  return [...allItems, { ...singleItem, quantity: 1 }];\n};\n\nexport const removeToCartItem = (allItems, singleItem) => {\n  const existingItem = allItems.find((item) => item.id === singleItem.id);\n\n  if (existingItem && existingItem.quantity === 1) {\n    return allItems.filter((item) => item.id !== singleItem.id);\n  }\n\n  return allItems.map((item) =>\n    item.id === singleItem.id ? { ...item, quantity: item.quantity - 1 } : item\n  );\n};\n","import actionTypes from '../types';\r\nimport { addToCartItem, removeToCartItem } from '../utilities/cart.utils';\r\n\r\nconst INITIAL_STATE = {\r\n  hidden: true,\r\n  cartItems: [],\r\n  animation: false,\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TOGGLE_CART_HIDDEN:\r\n      return { ...state, hidden: !state.hidden };\r\n\r\n    case actionTypes.ADD_CART_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: [...addToCartItem(state.cartItems, action.payload)],\r\n      };\r\n    case actionTypes.REMOVE_CART_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: [...removeToCartItem(state.cartItems, action.payload)],\r\n      };\r\n\r\n    case actionTypes.CLEAR_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((item) => item.id !== action.payload),\r\n      };\r\n\r\n    case actionTypes.ALL_CART_CLEAR:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      };\r\n\r\n    case actionTypes.SET_ANIMATION:\r\n      return { ...state, animation: !state.animation };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","import actionTypes from '../types';\r\n\r\nconst INITIAL_STATE = {\r\n  // shop category\r\n  categories: [    {\r\n      title: 'hats',\r\n      imageUrl: 'https://i.ibb.co/cvpntL1/hats.png',\r\n      id: 1,\r\n      linkUrl: 'shop/hats',\r\n    },\r\n    {\r\n      title: 'jackets',\r\n      imageUrl: 'https://i.ibb.co/px2tCc3/jackets.png',\r\n      id: 2,\r\n      linkUrl: 'shop/jackets',\r\n    },\r\n    {\r\n      title: 'sneakers',\r\n      imageUrl: 'https://i.ibb.co/0jqHpnp/sneakers.png',\r\n      id: 3,\r\n      linkUrl: 'shop/sneakers',\r\n    },\r\n    {\r\n      title: 'womens',\r\n      imageUrl: 'https://i.ibb.co/GCCdy8t/womens.png',\r\n      size: 'large',\r\n      id: 4,\r\n      linkUrl: 'shop/womens',\r\n    },\r\n    {\r\n      title: 'mens',\r\n      imageUrl: 'https://i.ibb.co/R70vBrQ/men.png',\r\n      size: 'large',\r\n      id: 5,\r\n      linkUrl: 'shop/mens',\r\n    },\r\n  ],\r\n  // shop collection > TODO pull data from firebase firestore\r\n  collections: null,\r\n  isFetching: false,\r\n  errorMessage: '',\r\n};\r\n\r\nconst localDatabaseReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_COLLECTIONS:\r\n      return { ...state, collections: action.payload };\r\n\r\n    case actionTypes.FETCH_COLLECTION_START:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n\r\n    case actionTypes.FETCH_COLLECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        collections: action.payload,\r\n      };\r\n\r\n    case actionTypes.FETCH_COLLECTION_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        errorMessage: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default localDatabaseReducer;","import { combineReducers } from 'redux';\n\nimport { persistReducer } from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\n\nimport userReducer from './reducers/user.reducer';\nimport cartReducer from './reducers/cart.reducer';\nimport localDatabaseReducer from './reducers/local.database'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart'],\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  localDatabase: localDatabaseReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);","import { put, call, takeLatest, all } from 'redux-saga/effects';\r\nimport {\r\n  auth,\r\n  convertCollectionSnapshotToMap,\r\n  createUserProfileDocument,\r\n  firestore,\r\n  getCurrentUser,\r\n  googleProvider,\r\n} from '../firebase/firebase.utils';\r\nimport actionTypes from './types';\r\n\r\n// Local Sagas\r\nimport {\r\n  fetchCollectionsSuccess,\r\n  fetchCollectionsFailure,\r\n  signinSuccess,\r\n  signinFailure,\r\n  signoutFailure,\r\n  signoutSuccess,\r\n  clearAllCart,\r\n  signupFailure,\r\n  signupSuccess,\r\n} from './actions';\r\n\r\nfunction* fetchCollectionsAsync() {\r\n  try {\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\r\n    yield put(fetchCollectionsSuccess(collectionsMap));\r\n  } catch (error) {\r\n    yield put(fetchCollectionsFailure(error.message));\r\n  }\r\n}\r\nexport function* fetchCollectionsStart() {\r\n  yield takeLatest(actionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\r\n}\r\n\r\n// TODO: *Signin with Google and (Email & Password)\r\nfunction* userSigninSnapshot(user, additionalData) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, user, additionalData);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signinSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n  } catch (error) {\r\n    yield put(signinFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* signinWithGoogle() {\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(googleProvider);\r\n    yield userSigninSnapshot(user);\r\n  } catch (error) {\r\n    yield put(signinFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onGoogleSigninStart() {\r\n  yield takeLatest(actionTypes.GOOGLE_SIGNIN_START, signinWithGoogle);\r\n}\r\n\r\n/// Email Signin\r\nexport function* signinWithEmail({ payload: { email, password } }) {\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield userSigninSnapshot(user);\r\n  } catch (error) {\r\n    yield put(signinFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* onEmailSigninStart() {\r\n  yield takeLatest(actionTypes.EMAIL_SIGNIN_START, signinWithEmail);\r\n}\r\n\r\n// onAuthStateChanged\r\nfunction* isAuthenticatated() {\r\n  try {\r\n    const user = yield getCurrentUser();\r\n    if (!user) return;\r\n    yield userSigninSnapshot(user);\r\n  } catch (error) {\r\n    yield put(signinFailure(error.message));\r\n  }\r\n}\r\nfunction* onCheckUserSession() {\r\n  yield takeLatest(actionTypes.CHECK_USER_SESSION, isAuthenticatated);\r\n}\r\n\r\n// signout\r\nfunction* signOut() {\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signoutSuccess());\r\n  } catch (error) {\r\n    yield put(signoutFailure(error.message));\r\n  }\r\n}\r\n\r\nfunction* onSignOut() {\r\n  yield takeLatest(actionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\n// allCartClear when user logout\r\nfunction* clearCartSignout() {\r\n  yield put(clearAllCart());\r\n}\r\n\r\nfunction* onClearCart() {\r\n  yield takeLatest(actionTypes.SIGN_OUT_SUCCESS, clearCartSignout);\r\n}\r\n\r\n// signup and then signin\r\nfunction* signUp({ payload: { email, password, displayName } }) {\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    yield put(signupSuccess({ user, additionalData: displayName }));\r\n  } catch (error) {\r\n    yield put(signupFailure(error.message));\r\n  }\r\n}\r\n\r\nfunction* onSignUp() {\r\n  yield takeLatest(actionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nfunction* signinAfterSignup({ payload: { user, additionalData } }) {\r\n  yield userSigninSnapshot(user, additionalData);\r\n}\r\n\r\nfunction* onSignupSuccess() {\r\n  yield takeLatest(actionTypes.SIGN_UP_SUCCESS, signinAfterSignup);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(fetchCollectionsStart),\r\n    call(onGoogleSigninStart),\r\n    call(onEmailSigninStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOut),\r\n    call(onClearCart),\r\n    call(onSignUp),\r\n    call(onSignupSuccess),\r\n  ]);\r\n}\r\n","import { all, call } from 'redux-saga/effects';\r\nimport { userSagas } from './local.sagas';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    call(userSagas)\r\n  ]);\r\n}","import { applyMiddleware, createStore } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\n \r\nimport logger from 'redux-logger';\r\nimport rootReducer from './root-reducer';\r\n\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './root.sagas';\r\nconst sagaMiddleware = createSagaMiddleware() \r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './assets/styles/tailwindStyles.css';\r\nimport './assets/styles/Custom.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './Redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode> \r\n      <Provider store={store}>\r\n        <Router basename={process.env.PUBLIC_URL} >\r\n          <PersistGate persistor={persistor}>\r\n            <App />\r\n          </PersistGate>\r\n        </Router>\r\n      </Provider> \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}